package com.citycreek.of;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

public abstract class Exporter {

	private int count = 0;
	private char delimiter;
	private final Set<Long> orderIds = new LinkedHashSet<>();
	protected final StringBuilder iff = new StringBuilder();

	public Exporter(char delimiter) {
		this.delimiter = delimiter;
	}

	public int getCount() {
		return this.count;
	}

	public Set<Long> getOrderIds() {
		return this.orderIds;
	}

	public abstract Exporter exportOrders(List<Order> orders);

	protected abstract String getFilename();

	public Path write(Path parent) throws IOException {
		Path file = parent.resolve(this.getFilename());
		Files.write(file, this.iff.toString().getBytes(), StandardOpenOption.CREATE, StandardOpenOption.WRITE, StandardOpenOption.CREATE, StandardOpenOption.APPEND);
		return file;
	}

	final protected void addOrderId(long orderId) {
		this.orderIds.add(orderId);
	}

	protected void column(String value, boolean quotes) {
		if (quotes) {
			this.iff.append("\"").append(value).append("\"").append(this.delimiter);
		} else {
			this.iff.append(value).append(this.delimiter);
		}
	}

	protected void column(String value) {
		this.column(value, true);
	}

	protected void column(Number value) {
		this.column(value.toString(), false);
	}

	protected void rowEnd() {
		this.iff.append("\n");
		this.count++;
	}

	protected void headerRow(String header) {
		this.iff.append(header).append("\n");
	}

	protected void skip() {
		this.iff.append(this.delimiter);
	}
}
